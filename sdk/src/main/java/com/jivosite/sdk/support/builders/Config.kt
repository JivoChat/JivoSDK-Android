package com.jivosite.sdk.support.buildersimport android.app.PendingIntentimport android.net.Uriimport androidx.annotation.ColorResimport androidx.annotation.DrawableResimport androidx.annotation.StringResimport com.jivosite.sdk.Rimport com.jivosite.sdk.ui.chat.JivoChatFragment/** * Created on 07.06.2021. * * @author Alexander Tavtorkin (tavtorkin@jivosite.com) */class Config private constructor(    val background: Int?,    val logo: Int?,    val isLogoVisible: Boolean,    val title: Int?,    val subtitle: Int?,    val titleTextColor: Int?,    val subtitleTextColor: Int?,    val subtitleTextColorAlpha: Float?,    val navigationIconTint: Int?,    val welcomeMessage: Int?,    val outgoingMessageColor: Color,    val openNotificationCallback: (() -> PendingIntent)?,    val onBackPressedCallback: (JivoChatFragment.() -> Unit)?,    val uriNotificationSound: Uri?,) {    class Builder {        @DrawableRes private var background: Int? = null        @DrawableRes private var logo: Int? = null        private var isLogoVisible: Boolean = true        @ColorRes private var navigationIconTint: Int? = null        @StringRes private var title: Int? = null        @StringRes private var subtitle: Int? = null        @ColorRes private var titleTextColor: Int? = null        @ColorRes private var subtitleTextColor: Int? = null        private var subtitleTextColorAlpha: Float? = null        @StringRes private var welcomeMessage: Int? = null        private var color: Color = Color.GREEN        private var openNotificationCallback: (() -> PendingIntent)? = null        private var onBackPressedCallback: (JivoChatFragment.() -> Unit)? = null        private var uriNotificationSound: Uri? = null        fun setBackground(@DrawableRes backgroundResId: Int) = apply { this.background = backgroundResId }        fun setLogo(@DrawableRes logoResId: Int) = apply { this.logo = logoResId }        fun hideLogo() = apply { this.isLogoVisible = false }        fun setTitle(@StringRes titleResId: Int) = apply { this.title = titleResId }        fun setSubtitle(@StringRes subtitleResId: Int) = apply { this.subtitle = subtitleResId }        fun setTitleTextColor(@ColorRes colorResId: Int) = apply {            this.titleTextColor = colorResId            this.navigationIconTint = colorResId        }        fun setSubtitleTextColor(@ColorRes colorResId: Int) = apply {            this.subtitleTextColor = colorResId        }        fun setSubtitleTextColorAlpha(alpha: Float) = apply {            this.subtitleTextColorAlpha = alpha        }        fun setWelcomeMessage(@StringRes welcomeMessageResId: Int) = apply { this.welcomeMessage = welcomeMessageResId }        fun setOutgoingMessageColor(color: Color) = apply { this.color = color }        fun setOpenNotification(callback: (() -> PendingIntent)) = apply { this.openNotificationCallback = callback }        fun setOnBackPressed(callback: JivoChatFragment.() -> Unit) = apply { this.onBackPressedCallback = callback }        fun setUriNotificationSound(uri: Uri) = apply { this.uriNotificationSound = uri }        fun build() = Config(            background,            logo,            isLogoVisible,            title,            subtitle,            titleTextColor,            subtitleTextColor,            subtitleTextColorAlpha,            navigationIconTint,            welcomeMessage,            color,            openNotificationCallback,            onBackPressedCallback,            uriNotificationSound        )    }    enum class Color(@ColorRes val color: Int) {        GREEN(R.color.apple),        GREY(R.color.eastBay),        BLUE(R.color.royalBlue)    }}