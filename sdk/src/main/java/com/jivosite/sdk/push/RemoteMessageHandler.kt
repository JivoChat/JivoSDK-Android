package com.jivosite.sdk.pushimport com.google.firebase.messaging.RemoteMessageimport com.jivosite.sdk.Jivoimport com.jivosite.sdk.model.pojo.push.Notificationimport com.jivosite.sdk.model.pojo.push.PushDataimport com.jivosite.sdk.model.pojo.push.Uimport com.jivosite.sdk.push.handler.PushMessageHandlerimport com.squareup.moshi.Moshiimport org.json.JSONObjectimport javax.inject.Inject/** * Created on 28.05.2021. * * @author Alexander Tavtorkin (av.tavtorkin@gmail.com) */class RemoteMessageHandler @Inject constructor(    private var parser: Moshi,    private var handler: PushMessageHandler) {    fun handleRemoteMessage(message: RemoteMessage): Boolean {        Jivo.i("Received push message")        val data = try {            extractData(message)        } catch (e: Exception) {            Jivo.e(e, "Push message parsing problem")            return false        }        handler.handle(data)        return true    }    private fun extractData(message: RemoteMessage): PushData {        // Extract "u" field from remote message        val u = message.data["u"]?.let {            if (JSONObject(it).optBoolean("jivosdk", false)){                parser.adapter(U::class.java).fromJson(it)            } else {                throw IllegalArgumentException("Field jivosdk has missing")            }        }        // Extract "notification" field from remote message        val notification = message.data["notification"]?.let {            parser.adapter(Notification::class.java).fromJson(it)        }        return PushData(            requireNotNull(u) { """There is no "u" field in push message""" },            requireNotNull(notification) { """There is no "notification" field in push message""" }        )    }}