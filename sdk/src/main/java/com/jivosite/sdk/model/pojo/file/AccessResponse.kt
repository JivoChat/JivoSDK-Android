package com.jivosite.sdk.model.pojo.fileimport com.jivosite.sdk.model.pojo.response.Responseimport com.squareup.moshi.Jsonimport com.squareup.moshi.JsonClassimport okhttp3.MultipartBodyimport okhttp3.RequestBodyimport okhttp3.RequestBody.Companion.toRequestBody/** * Created on 19.11.2020. * * @author Alexander Tavtorkin (av.tavtorkin@gmail.com) */@JsonClass(generateAdapter = true)data class AccessResponse(        @Json(name = "ok")        override val isOk: Boolean = false,        @Json(name = "url")        val url: String,        @Json(name = "date")        val date: String,        @Json(name = "policy")        val policy: String,        @Json(name = "credential")        val credential: String,        @Json(name = "algorithm")        val algorithm: String,        @Json(name = "signature")        val signature: String,        @Json(name = "key")        val key: String,) : Response() {    fun requestBody(fileName: String, mimeType: String): HashMap<String, RequestBody> = hashMapOf(            "X-Amz-Date" to date.toRequestBody(MultipartBody.FORM),            "X-Amz-Signature" to signature.toRequestBody(MultipartBody.FORM),            "X-Amz-Credential" to credential.toRequestBody(MultipartBody.FORM),            "X-Amz-Algorithm" to algorithm.toRequestBody(MultipartBody.FORM),            "Policy" to policy.toRequestBody(MultipartBody.FORM),            "acl" to "public-read".toRequestBody(MultipartBody.FORM),            "key" to key.toRequestBody(MultipartBody.FORM),            "Content-Disposition" to """attachment; filename*=UTF-8''$fileName""".toRequestBody(                    MultipartBody.FORM            ),            "Content-Type" to mimeType.toRequestBody(MultipartBody.FORM)    )}