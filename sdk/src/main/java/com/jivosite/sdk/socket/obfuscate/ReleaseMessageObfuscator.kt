package com.jivosite.sdk.socket.obfuscateimport android.webkit.URLUtilimport com.jivosite.sdk.model.pojo.socket.SocketMessage/** * Created on 21.01.2022. * * @author Alexander Tavtorkin (av.tavtorkin@gmail.com) */class ReleaseMessageObfuscator : MessageObfuscator {    override fun obfuscate(msg: String, socketMessage: SocketMessage): String {        val map = mutableMapOf<String, String>().apply {            addValue("type", socketMessage.type)            addValue("data", handleData(socketMessage))            addValue("id", socketMessage.id)            addValue("context", socketMessage.context)            addValue("to", socketMessage.to)            addValue("from", socketMessage.from)            addValue("parent", socketMessage.parent)        }       return map.entries.joinToString(",", "{", "}") { toString(it) }    }    private fun handleData(socketMessage: SocketMessage): String? {        val data = socketMessage.data ?: return null        return if (socketMessage.type == "text/plain" && !URLUtil.isHttpsUrl(data)) {            data.replaceRange(data.indices, "***")        } else data    }    private fun toString(entry: Map.Entry<String, String>): String = """"${entry.key}":"${entry.value}""""}fun MutableMap<String, String>.addValue(key: String, value: String?) {    value?.let { this.put(key, value) }}