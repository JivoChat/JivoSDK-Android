package com.jivosite.sdk.ui.chat.items.message.mediaimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MediatorLiveDataimport com.jivosite.sdk.model.repository.agent.AgentRepositoryimport com.jivosite.sdk.model.repository.media.Mediaimport com.jivosite.sdk.model.repository.media.MediaRepositoryimport com.jivosite.sdk.support.ext.loadSilentlyResourceimport com.jivosite.sdk.ui.chat.items.HistoryMessageEntryimport com.jivosite.sdk.ui.chat.items.message.general.MessageItemViewModelimport javax.inject.Inject/** * Created on 23.10.2021. * * @author Alexander Tavtorkin (av.tavtorkin@gmail.com) */open class MediaItemViewModel<T : HistoryMessageEntry> @Inject constructor(    agentRepository: AgentRepository,    private val mediaRepository: MediaRepository) : MessageItemViewModel<T>(agentRepository) {    private val _newState = MediatorLiveData<MediaItemState>().apply {        value = MediaItemState.Initial        addSource(_entry) {            handleNewFileItemState(it.data)        }    }    val newState: LiveData<MediaItemState>        get() = _newState    private fun handleNewFileItemState(path: String) {        if (path.isEmpty()) {            updateState(MediaItemState.Error())        } else {            mediaRepository.getMedia(path).loadSilentlyResource {                progress { updateState(MediaItemState.Loading) }                result {                    if (it.isExpired) {                        updateState(MediaItemState.Expired)                    } else {                        updateState(MediaItemState.Success(it))                    }                }                error {                    updateState(MediaItemState.Error())                }            }        }    }    private fun updateState(state: MediaItemState) {        _newState.value = state    }}sealed class MediaItemState {    object Initial : MediaItemState()    object Loading : MediaItemState()    data class Success(        val media: Media = Media()    ) : MediaItemState()    object Expired : MediaItemState()    data class Error(        val messageError: String? = null    ) : MediaItemState()}