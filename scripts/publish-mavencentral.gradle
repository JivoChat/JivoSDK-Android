apply plugin: 'maven-publish'apply plugin: 'signing'task androidSourcesJar(type: Jar) {    archiveClassifier.set('sources')    if (project.plugins.findPlugin("com.android.library")) {        from android.sourceSets.main.java.srcDirs        from android.sourceSets.main.kotlin.srcDirs    } else {        from sourceSets.main.java.srcDirs        from sourceSets.main.kotlin.srcDirs    }}artifacts {    archives androidSourcesJar}group = PUBLISH_GROUP_IDversion = PUBLISH_VERSIONext["signing.keyId"] = ''ext["signing.password"] = ''ext["signing.secretKeyRingFile"] = ''ext["ossrhUsername"] = ''ext["ossrhPassword"] = ''ext["sonatypeStagingProfileId"] = ''File secretPropsFile = project.rootProject.file('local.properties')if (secretPropsFile.exists()) {    Properties p = new Properties()    p.load(new FileInputStream(secretPropsFile))    p.each { name, value ->        ext[name] = value    }} else {    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')}publishing {    publications {        release(MavenPublication) {            groupId PUBLISH_GROUP_ID            artifactId PUBLISH_ARTIFACT_ID            version PUBLISH_VERSION            if (project.plugins.findPlugin("com.android.library")) {                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")            } else {                artifact("$buildDir/libs/${project.getName()}-${version}.jar")            }            artifact androidSourcesJar            pom {                name = PUBLISH_ARTIFACT_ID                description = 'With JivoSDK-Android you can integrate the chat widget for customer support into your native app'                url = 'https://github.com/JivoChat/JivoSDK-Android'                licenses {                    license {                        name = 'The Apache License, Version 2.0'                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'                    }                }                developers {                    developer {                        id = 'shibelev-jivo'                        name = 'Alexandr Shibelev'                        email = 'shibelev@jivosite.com'                    }                    developer {                        id = 'tavtorkin'                        name = 'Alexander Tavtorkin'                        email = 'tavtorkin@jivosite.com'                    }                }                scm {                    connection = 'scm:git:github.com/JivoChat/JivoSDK-Android.git'                    developerConnection = 'scm:git:ssh://github.com/JivoChat/JivoSDK-Android.git'                    url = 'https://github.com/JivoChat/JivoSDK-Android/tree/develop'                }                withXml {                    def dependenciesNode = asNode().appendNode('dependencies')                    project.configurations.implementation.allDependencies.each {                        def dependencyNode = dependenciesNode.appendNode('dependency')                        dependencyNode.appendNode('groupId', it.group)                        dependencyNode.appendNode('artifactId', it.name)                        dependencyNode.appendNode('version', it.version)                    }                }            }        }    }    repositories {        maven {            name = "sonatype"            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"            credentials {                username ossrhUsername                password ossrhPassword            }        }    }}signing {    sign publishing.publications}